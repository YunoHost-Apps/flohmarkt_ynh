#!/bin/bash

source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

# restore couchdb directory
ynh_script_progression --message="Restoring couchdb directory..." --weight=1
ynh_restore_file --origin_path="/var/lib/couchdb"

# reinstall couchdb
ynh_script_progression --message="Reinstalling couchdb..." --weight=40

echo "\
couchdb couchdb/mode select standalone
couchdb couchdb/mode seen true
couchdb couchdb/bindaddress string 127.0.0.1
couchdb couchdb/bindaddress seen true
couchdb couchdb/cookie string $couchdb_magic_cookie
couchdb couchdb/adminpass password $password_couchdb_admin
couchdb couchdb/adminpass seen true
couchdb couchdb/adminpass_again password $password_couchdb_admin
couchdb couchdb/adminpass_again seen true" | debconf-set-selections
DEBIAN_FRONTEND=noninteractive # apt-get install -y --force-yes couchdb

ynh_install_extra_app_dependencies \
    --repo="deb https://apache.jfrog.io/artifactory/couchdb-deb/ $(lsb_release -c -s) main" \
    --key="https://couchdb.apache.org/repo/keys.asc" \
    --package="couchdb"

# stop couchdb
systemctl stop couchdb

# add couchdb configuration
ynh_script_progression --message="Adding a configuration file..." --weight=2
ynh_restore_file --origin_path="/opt/couchdb/etc/local.d/05-flohmarkt.ini"
chown root:couchdb /opt/couchdb/etc/local.d/05-flohmarkt.ini
chmod 640 /opt/couchdb/etc/local.d/05-flohmarkt.ini

# start couchdb
systemctl start couchdb
systemctl status couchdb

# RESTORE THE APP MAIN DIR
ynh_script_progression --message="Restoring the app main directory..." --weight=10
ynh_restore_file --origin_path="$install_dir"
# chmod -R 644 $install_dir
# chown -R root:$app $install_dir

# RESTORE THE DATA DIRECTORY
ynh_script_progression --message="Restoring the data directory..." --weight=1
ynh_restore_file --origin_path="$data_dir" --not_mandatory
mkdir -p $data_dir

# RESTORE FAIL2BAN CONFIGURATION
ynh_script_progression --message="Restoring the Fail2Ban configuration..." --weight=2
ynh_restore_file --origin_path="/etc/fail2ban/jail.d/$app.conf"
ynh_restore_file --origin_path="/etc/fail2ban/filter.d/$app.conf"
ynh_systemd_action --action=restart --service_name=fail2ban

# RESTORE THE NGINX CONFIGURATION
ynh_script_progression --message="Restoring the NGINX web server configuration..." --weight=1
ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

# RESTORE THE LOGROTATE CONFIGURATION
ynh_script_progression --message="Restoring the logrotate configuration..." --weight=1
ynh_restore_file --origin_path="/etc/logrotate.d/$app"

# add some debugging to find #21
ynh_exec_warn_less ls -lR /var/lib/couchdb /opt/couchdb/etc $install_dir /var/log/couchdb/couchdb.log \
  /var/log/$app/$app.log $data_dir /etc/nginx/conf.d/$domain.d/$app.conf || true
ynh_exec_warn_less cat $install_dir/$app/flohmarkt.conf /opt/couchdb/etc/local.d/05-flohmarkt.ini
ynh_exec_warn_less tail -n50 /var/log/couchdb/couchdb.log /var/log/$app/$app.log
ynh_exec_warn_less cat /etc/nginx/conf.d/$domain.d/$app.conf
ynh_exec_warn_less curl -D - "http://admin:$password_couchdb_admin:127.0.0.1:5984"
ynh_exec_warn_less curl -D - "http://flohmarkt:$password_couchdb_flohmarkt:127.0.0.1:5984"
ynh_exec_warn_less curl -D - "http://$domain"
ynh_exec_warn_less curl -kD - "https://$domain"

# INTEGRATE SERVICE IN YUNOHOST
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1
ynh_restore_file --origin_path="/etc/systemd/system/$app.service"
yunohost service add $app --description="A decentral federated small advertisement platform" --log="/var/log/$app/$app.log"
ynh_systemd_action --action=start --line_match="INFO:     Application startup complete."

# add some debugging to find #21
ynh_exec_warn_less systemctl status flohmarkt
ynh_exec_warn_less systemctl status couchdb

# RELOAD NGINX
ynh_script_progression --message="Reloading NGINX web server..." --weight=1
ynh_systemd_action --service_name=nginx --action=reload

# add some debugging to find #21
ynh_exec_warn_less ps axuf
ynh_exec_warn_less netstat -pnlt

ynh_script_progression --message="Restoration completed for $app" --last
