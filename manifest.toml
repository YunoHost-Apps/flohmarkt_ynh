#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "flohmarkt"
name = "flohmarkt"
description.en = "A decentral federated small ads platform"
description.fr = "Plateforme de petites annonces fédérées décentralisées"

version = "0.6.1~ynh3"

maintainers = ["Chris Vogel"]

[upstream]
license = "AGPL-3.0"
website = "https://codeberg.org/flohmarkt/flohmarkt"
demo = "https://flohmarkt.ween.de/"
admindoc = "https://codeberg.org/flohmarkt/flohmarkt/wiki"
userdoc = "https://codeberg.org/flohmarkt/flohmarkt/wiki"
code = "https://codeberg.org/flohmarkt/flohmarkt"
# For example, for Nextcloud, the CPE is 'cpe:2.3:a:nextcloud:nextcloud' (no need to include the version number)
# cpe = "does_not_exist_yet"

# This is meant to be an URL where people can financially support this app, especially when its development is based
# on volunteers and/or financed by its community. YunoHost may later advertise it in the webadmin.
# fund = "???"

[integration]
yunohost = ">= 12.0.9"
architectures = "all"
# https://codeberg.org/ChriChri/flohmarkt_ynh/issues/11
multi_instance = true

# the "ldap" key corresponds to wether or not a user *can* login on the app using
# its YunoHost credentials.
# https://codeberg.org/ChriChri/flohmarkt_ynh/issues/2
ldap = false

# the "sso" key corresponds to wether or not a user is *automatically logged-in*
# on the app when logged-in on the YunoHost portal.
# "Internally, SSOwat will on-the-fly inject HTTP Basic Auth Headers like Authorization: 
# Basic <base64credentials>."
# https://yunohost.org/de/packaging_sso_ldap_integration#sso-integration
# https://codeberg.org/ChriChri/flohmarkt_ynh/issues/3
sso = false

# **estimate** minimum disk and RAM requirements
disk = "200M"
ram.build = "200M"
ram.runtime = "100M"

[install]
    [install.domain]
    # ask admin on which domain to run flohmarkt
    type = "domain"

    # [install.path]
    # # ask admin under which path flohmarkt will be reachable
    # # doesn't work, yet: https://codeberg.org/flohmarkt/flohmarkt_ynh/issues/53
    # type = "path"
    # default = "/"

    [install.init_main_permission]
    # who will be able to access the apps URL after installation?
    type = "group"
    default = "visitors"

    [install.password_couchdb_admin]
    # couchdb admin password
    type = "password"
    ask.en = "CouchDB password for admin user"
    help.en = "Don't forget to note this password somewhere! You need to provide this password during install and for future upgrades. If there's already a CouchDB installed provide the adminpassword for the existing installation."
    ask.de = "Passwort für den admin Benutzer von CouchDB"
    help.de = "Bitte das Passwort notieren und aufheben! Dieses Passwort muss bei der Installation und bei zukünftigen Upgrades eingegeben werden. Wenn bereits eine CouchDB installiert ist, hier das Passwort der bestehenden Installation eingeben."

    [install.mail_user]
    # @@ any type for this to make sure it can be used as the user part of an email address?
    default = "flohmarkt"
    type = "string"
    ask.en = "mail sender local part"
    help.en = "flohmarkt will send emails using the sender <mail_user>@<mail_domain>. Please provide the <mail_user> part."
    ask.de = "E-Mail-Absender Benutzername"
    help.de = "flohmarkt verschickt emails unter dem Absender <mail_user>@<mail_domain>. Bitte gib Deinen <mail_user> ein."

    [install.mail_domain]
    # @@ is there a 'type' that makes sure that on this domain email service is enabled?
    type = "domain"
    ask.en = "mail sender domain part"
    help.en = "flohmarkt will send emails using the sender <mail_user>@<mail_domain>. Please provide the <mail_domain> part."
    ask.de = "E-Mail-Absender Domain"
    help.de = "flohmarkt verschickt emails unter dem Absender <mail_user>@<mail_domain>. Bitte gib Deine <mail_domain> ein."

    [install.flohmarkt_name]
    # flohmarkt.conf: "InstanceName"
    type = "string"
    default = "my yunohost flohmarkt"
    ask.en = "name of your flohmarkt instance"
    ask.de = "Name des Flohmarkts"

    [install.admin_mail]
    type="email"
    ask.en = "email address of this flohmarkts admin"
    help.en = "you'll get notified about events like changes in the user database of flohmarkt"
    ask.de = "E-Mail Adresse des Administrators dieses flohmarkts"
    help.de = "an diese Adresse werden Informationen zu z.B. Änderungen an der Benutzerdatenbank geschickt"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those

    [resources.sources]

    [resources.sources.main]
    # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
    #    ynh_setup_source --dest_dir="$install_dir"
    # You can also define other assets than "main" and add --source_id="foobar" in the previous command
    #
    url = "https://codeberg.org/flohmarkt/flohmarkt/archive/0.6.1.tar.gz"
    sha256 = "e52dc810c8f0da130979c811fa44f5b5545e4ecf57885af97aae66fd08e81094"

    # These infos are used by https://github.com/YunoHost/apps/blob/master/tools/autoupdate_app_sources/autoupdate_app_sources.py
    # to auto-update the previous asset urls and sha256sum + manifest version
    # assuming the upstream's code repo is on github and relies on tags or releases
    # See the 'sources' resource documentation for more details

    # autoupdate.strategy = "latest_github_tag"

    # This will provision/deprovision a unix system user named id form above → 'flohmarkt'
    [resources.system_user]
    allow_email = true
    # ++ where to get/put mail_user and mail_domain to let the user set the address?
    #    https://yunohost.org/de/packaging_apps_resources#properties-4
    #    → [install] section
    # these shouldn't be necessary, because defined in the [install] section
    #    → yes, works. With the values from install section the mailuser ends up in 
    #      /etc/postfix/app_senders_login_maps
    # mail_user = "replace_mail_user_in_manifest_toml"
    # mail_domain = "replace_mail_domain_in_manifest.toml"
    # @@ how to create a couchdb user if needed? in install-script manually?

    [resources.install_dir]

    [resources.data_dir]

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question 
    # (public=visitors, private=all_users)
    # https://codeberg.org/ChriChri/flohmarkt_ynh/issues/5
    main.url = "/"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting
    # uvicorn running the flohmarkt app will be started listening to this port
    # if 'main.default' is already in use another random port will be used
    main.default = 8000
    # we'll rely on couchdb choosing the default port to listen to
    # otherwise I'll set a new port for each flohmarkt that will be installed until the
    # installation of couchdb is reworked by making it possible to do as a pure dependency
    # couchdb.default = 5984
    

    [resources.apt]
    # python dependencies shall be installed in a venv using pip.
    #  moreutils is needed for `ts` used in systemd.service
    # urlwatch for email notifications
    packages = "python3-pip python3-full curl apt-transport-https gnupg moreutils curl urlwatch"
    # repo for couchdb - doesn't work, yet
    # extras.couchdb.repo = "deb https://apache.jfrog.io/artifactory/couchdb-deb/ __YNH_DEBIAN_VERSION__ main"
    # extras.couchdb.key = "https://couchdb.apache.org/repo/keys.asc"
    # extras.couchdb.packages = ["couchdb"]
    # extras.couchdb.name = "couchdb"

